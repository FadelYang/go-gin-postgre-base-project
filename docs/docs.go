// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/examples": {
            "get": {
                "description": "get all example data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "examples"
                ],
                "summary": "Get Example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse-dto_ExampleDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "create an example",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "examples"
                ],
                "summary": "Post Example",
                "parameters": [
                    {
                        "description": "request body for create an example [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateExample"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse-dto_ExampleDTO"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse-dto_UserDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "create an user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "request body for create an user [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse-dto_UserDTO"
                        }
                    }
                }
            }
        },
        "/users/email/{email}": {
            "get": {
                "description": "Find user by email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Find User By Its Email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse-dto_UserDTO"
                        }
                    }
                }
            }
        },
        "/users/{uuid}": {
            "get": {
                "description": "Find user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Find User By Its UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse-dto_UserDTO"
                        }
                    }
                }
            },
            "put": {
                "description": "update an user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body for update an example [RAW]",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse-dto_UserDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.BaseResponse-dto_UserDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.BaseResponse-dto_ExampleDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.ExampleDTO"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "common.BaseResponse-dto_UserDTO": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.UserDTO"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateExample": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Bakwan Jagung"
                }
            }
        },
        "dto.CreateUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "budipambudi@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "supersecretpassword"
                },
                "username": {
                    "type": "string",
                    "example": "Budi Pambudi"
                }
            }
        },
        "dto.ExampleDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "a53515e3-5a7f-440b-82f6-3d84ac7ce746"
                },
                "name": {
                    "type": "string",
                    "example": "Bakwan Jagung"
                }
            }
        },
        "dto.UpdateUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "budipambudi@gmail.com"
                },
                "username": {
                    "type": "string",
                    "example": "Budi Pambudi"
                }
            }
        },
        "dto.UserDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "1617181723"
                },
                "email": {
                    "type": "string",
                    "example": "budipambudi@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "a53515e3-5a7f-440b-82f6-3d84ac7ce746"
                },
                "updated_at": {
                    "type": "string",
                    "example": "1617181723"
                },
                "username": {
                    "type": "string",
                    "example": "Budi Pambudi"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Go, Gin, and Postgre Base Project",
	Description:      "Go, Gin, and Postgre Base Project",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
